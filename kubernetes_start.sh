#!/bin/bash

# Script para automatizar o deploy da aplica√ß√£o distribu√≠da no Minikube.
# Garante que os pr√©-requisitos est√£o instalados, constr√≥i as imagens
# e aplica as configura√ß√µes do Kubernetes.

# Sai imediatamente se um comando falhar
set -e

echo "üöÄ Iniciando o Deploy no Kubernetes..."
echo "========================================"

# --- Verifica√ß√£o de Pr√©-requisitos ---
echo "1/5: Verificando pr√©-requisitos (minikube e docker)..."
if ! command -v minikube &> /dev/null; then
    echo "‚ùå Erro: Minikube n√£o foi encontrado. Por favor, instale-o primeiro."
    exit 1
fi

if ! command -v docker &> /dev/null; then
    echo "‚ùå Erro: Docker n√£o foi encontrado. Por favor, instale-o primeiro."
    exit 1
fi
echo "‚úÖ Pr√©-requisitos OK."

# --- Iniciar o Minikube ---
echo -e "\n2/5: Iniciando o Minikube (pode demorar alguns minutos)..."
minikube start
echo "‚úÖ Minikube iniciado."

# --- Conectar o Docker ao Minikube ---
echo -e "\n3/5: Conectando o ambiente Docker ao Minikube..."
eval $(minikube -p minikube docker-env)
echo "‚úÖ Ambiente Docker configurado."

# --- Construir as Imagens Docker ---
echo -e "\n4/5: Construindo as imagens dos servi√ßos..."
echo "   - Construindo imagem para o M√≥dulo A..."
docker build -t modulo-a-grpc:latest -f modulo_A/Dockerfile .
echo "   - Construindo imagem para o M√≥dulo B..."
docker build -t modulo-b-grpc:latest -f modulo_B/Dockerfile .
echo "   - Construindo imagem para o M√≥dulo P (Gateway)..."
docker build -t modulo-p-gateway:latest -f modulo_P/Dockerfile .
echo "‚úÖ Imagens constru√≠das com sucesso."

# --- Aplicar as Configura√ß√µes do Kubernetes ---
echo -e "\n5/5: Aplicando os manifestos do Kubernetes..."
# Aplica o namespace primeiro para evitar a race condition
minikube kubectl -- apply -f kubernetes/01-namespace.yaml

# Aguarda um momento para o namespace ser totalmente provisionado
sleep 2 

# Aplica o restante das configura√ß√µes
minikube kubectl -- apply -f kubernetes/
echo "‚úÖ Manifestos aplicados."

# --- Verifica√ß√£o Final ---
echo -e "\n‚è≥ Aguardando todos os pods ficarem no estado 'Running'..."
minikube kubectl -- wait --for=condition=ready pod --all -n projeto-distribuido --timeout=300s

echo -e "\nüéâ Deploy conclu√≠do com sucesso!"
echo "========================================"
echo "Sua aplica√ß√£o distribu√≠da est√° no ar."
echo ""
echo "Para acessar o Gateway, execute o seguinte comando em um novo terminal:"
echo "minikube service modulo-p-service -n projeto-distribuido"
echo ""
echo "Para ver o status de todos os recursos, execute:"
echo "minikube kubectl -- get all -n projeto-distribuido"
echo ""
echo "Para parar o cluster e liberar os recursos do seu PC, execute:"
echo "minikube stop"